@page "/potwierdzenie-wypożyczenia"
@using DriveIt.Model
@using DriveIt.Services

@inject HttpClient Http
@inject OfferService OfferService
@inject TokenService TokenService
@inject NavigationManager Navigation

<h3>Potwierdzenie wypożyczenia</h3>


@if(offer is not null)
{
    <p>Akceptujesz ofertę od: <strong>@offer.IntegratorName</strong></p>
    <p>Cena wypożyczenia za dzień: @offer.RentPrice</p>
    <p>Cena ubezpieczenia za dzień: @offer.InsurancePrice</p>
    <button class="btn btn-primary" @onclick="ConfirmReservation">Potwierdź wypożyczenie</button>
}
else
{
    <p>Ładowanie oferty...</p>
}

@code {
    [Parameter]
    public string? Token { get; set; }

    public string Message { get; set; }

    private Offer? offer;

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(Token))
        {
            Message = "Brak tokenu.";
            return;
        }

        if (TokenService.ValidateToken(Token, out var offerId))
        {
            // Token jest poprawny, możesz zaakceptować ofertę
            Message = "Oferta zaakceptowana!";
            offer = await OfferService.GetLocalOfferByIdAsync(offerId);

            // Tu można dodać logikę do zaakceptowania oferty w bazie
            // AcceptOffer(offerId);
        }
        else
        {
            // Token wygasł lub jest nieprawidłowy
            Message = "Link wygasł lub jest nieprawidłowy.";
        }

        // offer = await OfferService.GetOfferByIdAsync(ofertaId);

        if(offer is null)
            Navigation.NavigateTo("/404");
    }

    private async Task ConfirmReservation()
    {
        await OfferService.ConfirmOfferAsync(offer!);
        Navigation.NavigateTo("/moje-wypozyczenia");
    }
}
