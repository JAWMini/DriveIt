name: Deploy Two .NET Projects to Azure

on:
  push:
    branches:
      - main  # uruchamiaj pipeline po puszu na branch main
  workflow_dispatch:  # opcja manualnego uruchamiania z GitHub UI

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app_name: ['DriveIt', 'DriveItAPI']  # Nazwy aplikacji na Azure
        package_path: ['DriveIt/DriveIt.csproj', 'DriveItAPI/DriveItAPI.csproj']  # Ścieżki do projektów .csproj

    steps:
    # Krok 1: Checkout repozytorium
    - name: Checkout code
      uses: actions/checkout@v3

    # Krok 2: Zainstaluj .NET Core SDK
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'  # Upewnij się, że jest to wersja .NET używana w Twoim projekcie

    # Krok 3: Przywróć zależności NuGet
    - name: Restore dependencies
      run: dotnet restore ${{ matrix.package_path }}

    # Krok 4: Zbuduj aplikację
    - name: Build application
      run: dotnet build ${{ matrix.package_path }} --configuration Release --no-restore

    # Krok 5: Publikuj aplikację
    - name: Publish application
      run: dotnet publish ${{ matrix.package_path }} --configuration Release --output ./publish_output

    # Krok 6: Deploy do Azure
    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ matrix.app_name }}  # Nazwa aplikacji w Azure App Service
        slot-name: 'production'  # Użyj innego slotu jeśli masz taką konfigurację
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # Tajny klucz z profilu publikacji
        package: ./publish_output
